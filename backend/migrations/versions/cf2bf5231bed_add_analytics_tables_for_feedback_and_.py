"""Add analytics tables for feedback and security

Revision ID: cf2bf5231bed
Revises: 9ef3a14d78f5
Create Date: 2025-08-11 18:10:16.282174

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'cf2bf5231bed'
down_revision: Union[str, Sequence[str], None] = '9ef3a14d78f5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('promptfeedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_prompt_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('suggested_prompt', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('upvotes', sa.Integer(), nullable=False),
    sa.Column('downvotes', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_promptfeedback_original_prompt_hash'), 'promptfeedback', ['original_prompt_hash'], unique=False)
    op.create_table('securityviolationpattern',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('violation_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_securityviolationpattern_violation_type'), 'securityviolationpattern', ['violation_type'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_securityviolationpattern_violation_type'), table_name='securityviolationpattern')
    op.drop_table('securityviolationpattern')
    op.drop_index(op.f('ix_promptfeedback_original_prompt_hash'), table_name='promptfeedback')
    op.drop_table('promptfeedback')
    # ### end Alembic commands ###
