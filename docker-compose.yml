version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: testdb
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app/backend
    depends_on:
      - db
      - redis

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    depends_on:
      - backend

  celery-worker:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: celery -A backend.core.celery_app worker --loglevel=info
    volumes:
      - ./backend:/app/backend
    env_file:
      - ./backend/.env
    depends_on:
      - backend
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: celery -A backend.core.celery_app beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app/backend
    env_file:
      - ./backend/.env
    depends_on:
      - backend
      - redis
      - db

volumes:
  postgres_data:
